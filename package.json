{
  "name": "cscart-development-helper",
  "displayName": "CSCart Development Helper",
  "publisher": "GlebPerfiliev",
  "description": "Unofficial extension for CS-Cart developers",
  "repository": "https://github.com/prototype95711/cscart-development-helper-vscode/",
  "icon": "icon.png",
  "version": "0.0.53",
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "cs-cart",
    "cscart",
    "addons"
  ],
  "activationEvents": [
    "onCommand:addonExplorer.openAddon"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "keybindings": [
      {
        "command": "workbench.view.extension.cs-addon-explorer",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cs-addon-explorer",
          "title": "%addon_explorer.title%",
          "icon": "media/addon.svg"
        }
      ],
      "panel": [
        {
          "id": "cs-overrides-view",
          "title": "%overrides.title%",
          "icon": "media/addon.svg"
        }
      ]
    },
    "commands": [
      {
        "command": "csAddonExplorer.findOverrides",
        "title": "%overrides.find%"
      },
      {
        "command": "csAddonExplorer.collapseAddonItems",
        "title": "%addon_explorer.collapse_addon%",
        "icon": "$(collapse-all)"
      },
      {
        "command": "csAddonExplorer.normalizeLangVars",
        "title": "%addon_explorer.normalize_translates%"
      },
      {
        "command": "csAddonExplorer.translateAddon",
        "title": "%addon_explorer.translate%"
      },
      {
        "command": "csAddonExplorer.copyAddonName",
        "title": "%addon_explorer.copyAddonName%"
      },
      {
        "command": "csAddonExplorer.packAddon",
        "title": "%addon_explorer.packAddon%"
      },
      {
        "command": "csAddonExplorer.closeAddon",
        "title": "%addon_explorer.close%"
      },
      {
        "command": "csAddonExplorer.newFile",
        "title": "%addon_explorer.files.newFile%"
      },
      {
        "command": "csAddonExplorer.newFolder",
        "title": "%addon_explorer.files.newFolder%"
      },
      {
        "command": "csAddonExplorer.openAddon",
        "title": "%addon_explorer.files.openAddon%"
      },
      {
        "command": "csAddonExplorer.openFile",
        "title": "%addon_explorer.files.openFile%"
      },
      {
        "command": "csAddonExplorer.openWith",
        "title": "%addon_explorer.files.openWith%"
      },
      {
        "command": "csAddonExplorer.openFileToSide",
        "title": "%addon_explorer.files.openFileToSide%"
      },
      {
        "command": "csAddonExplorer.revealFileInExplorer",
        "title": "%addon_explorer.files.revealFileInExplorer%"
      },
      {
        "command": "csAddonExplorer.revealFileInOS.linux",
        "title": "%command.revealFileInOS.linux%"
      },
      {
        "command": "csAddonExplorer.revealFileInOS.mac",
        "title": "%command.revealFileInOS.mac%"
      },
      {
        "command": "csAddonExplorer.revealFileInOS.windows",
        "title": "%command.revealFileInOS.windows%"
      },
      {
        "command": "csAddonExplorer.copyPath",
        "title": "%addon_explorer.files.copyPath%"
      },
      {
        "command": "csAddonExplorer.copyRelativeFilePath",
        "title": "%addon_explorer.files.copyRelativeFilePath%"
      },
      {
        "command": "csAddonExplorer.cut",
        "title": "%addon_explorer.files.cut%"
      },
      {
        "command": "csAddonExplorer.copy",
        "title": "%addon_explorer.files.copy%"
      },
      {
        "command": "csAddonExplorer.paste",
        "title": "%addon_explorer.files.paste%"
      },
      {
        "command": "csAddonExplorer.findInFolder",
        "title": "%addon_explorer.files.findInFolder%"
      },
      {
        "command": "csAddonExplorer.rename",
        "title": "%addon_explorer.files.rename%"
      },
      {
        "command": "csAddonExplorer.delete",
        "title": "%addon_explorer.files.delete%"
      },
      {
        "command": "overridesProvider.openFile",
        "title": "%overrides.openFile%"
      },
      {
        "command": "csAddonExplorer.refresh",
        "title": "%addon_explorer.refresh%",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "csOverridesList.refresh",
        "title": "%overrides.refresh%",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "csAddonExplorer.findOverrides",
          "when": "isMayBeCSOverrides && isCsCartWorkspaces",
          "group": "navigation@1.31"
        }
      ],
      "view/title": [
        {
          "command": "csAddonExplorer.openAddon",
          "when": "view == csAddonExplorer && isCsCartWorkspaces",
          "group": "navigation"
        },
        {
          "command": "csAddonExplorer.refresh",
          "when": "view == csAddonExplorer && isCsCartWorkspaces",
          "group": "navigation"
        },
        {
          "command": "csOverridesList.refresh",
          "when": "view == csOverridesList && isCsCartWorkspaces",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "csAddonExplorer.collapseAddonItems",
          "when": "view == csAddonExplorer && viewItem == addon",
          "group": "inline"
        },
        {
          "command": "csAddonExplorer.normalizeLangVars",
          "when": "view == csAddonExplorer && viewItem == addon",
          "group": "navigation@1"
        },
        {
          "command": "csAddonExplorer.translateAddon",
          "when": "view == csAddonExplorer && viewItem == addon",
          "group": "navigation@1"
        },
        {
          "command": "csAddonExplorer.copyAddonName",
          "when": "view == csAddonExplorer && viewItem == addon",
          "group": "2_view@2"
        },
        {
          "command": "csAddonExplorer.packAddon",
          "when": "view == csAddonExplorer && viewItem == addon",
          "group": "2_view@2"
        },
        {
          "command": "csAddonExplorer.closeAddon",
          "when": "view == csAddonExplorer && (viewItem == addon || viewItem == unknown_addon)",
          "group": "8_modification"
        },
        {
          "command": "csAddonExplorer.newFile",
          "when": "view == csAddonExplorer && viewItem == folder",
          "group": "navigation@1"
        },
        {
          "command": "csAddonExplorer.newFolder",
          "when": "view == csAddonExplorer && (viewItem == folder || viewItem == compactFolder || viewItem == csFolder)",
          "group": "navigation@1"
        },
        {
          "command": "csAddonExplorer.revealFileInExplorer",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == folder || viewItem == template_file || viewItem == compactFolder || viewItem == csFolder)",
          "group": "2_view@1"
        },
        {
          "command": "csAddonExplorer.openWith",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file)",
          "group": "navigation@1"
        },
        {
          "command": "csAddonExplorer.openFileToSide",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file)",
          "group": "navigation@1"
        },
        {
          "command": "csAddonExplorer.findOverrides",
          "when": "view == csAddonExplorer && viewItem == template_file",
          "group": "2@1"
        },
        {
          "command": "csAddonExplorer.revealFileInOS.linux",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder || viewItem == compactFolder || viewItem == csFolder) && isLinux",
          "group": "2_view@2"
        },
        {
          "command": "csAddonExplorer.revealFileInOS.mac",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder || viewItem == compactFolder || viewItem == csFolder) && isMac",
          "group": "2_view@2"
        },
        {
          "command": "csAddonExplorer.revealFileInOS.windows",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder || viewItem == compactFolder || viewItem == csFolder) && isWindows",
          "group": "2_view@2"
        },
        {
          "command": "csAddonExplorer.copyPath",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder || viewItem == compactFolder || viewItem == csFolder)",
          "group": "2@2"
        },
        {
          "command": "csAddonExplorer.copyRelativeFilePath",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder || viewItem == compactFolder || viewItem == csFolder)",
          "group": "2@2"
        },
        {
          "command": "csAddonExplorer.cut",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder)",
          "group": "1_modification@3"
        },
        {
          "command": "csAddonExplorer.copy",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder)",
          "group": "1_modification@3"
        },
        {
          "command": "csAddonExplorer.paste",
          "when": "view == csAddonExplorer && viewItem == folder && addonExplorer.hasFilesToPaste",
          "group": "1_modification@3"
        },
        {
          "command": "csAddonExplorer.findInFolder",
          "when": "view == csAddonExplorer && (viewItem == folder || viewItem == compactFolder || viewItem == csFolder)",
          "group": "4_search"
        },
        {
          "command": "csAddonExplorer.rename",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder)",
          "group": "7_modification"
        },
        {
          "command": "csAddonExplorer.delete",
          "when": "view == csAddonExplorer && (viewItem == file || viewItem == template_file || viewItem == folder)",
          "group": "8_modification"
        }
      ]
    },
    "colors": [
      {
        "id": "csAddonExplorer.cuttedFilesForeground",
        "description": "%colors.added%",
        "defaults": {
          "light": "#858585",
          "dark": "#767676",
          "highContrast": "#c5c5c5",
          "highContrastLight": "#374e06"
        }
      }
    ],
    "views": {
      "cs-addon-explorer": [
        {
          "id": "csAddonExplorer",
          "name": "%cs_cart_addons%",
          "icon": "media/addon.svg",
          "contextualTitle": "%addons%"
        }
      ],
      "cs-overrides-view": [
        {
          "id": "csOverridesList",
          "name": "%overrides.list.title%",
          "icon": "media/addon.svg",
          "contextualTitle": "%overrides.title%",
          "visibility": "visible",
          "when": "isMayBeCSOverrides"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@types/mkdirp": "^0.5.2",
    "@types/mocha": "^10.0.3",
    "@types/node": "18.x",
    "@types/readable-stream": "^4.0.11",
    "@types/rimraf": "^4.0.5",
    "@types/vscode": "^1.84.0",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "eslint": "^8.52.0",
    "mocha": "^10.2.0",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "content-type": "^1.0.5",
    "encoding": "^0.1.13",
    "mkdirp": "^0.5.1",
    "readable-stream": "^4.5.2",
    "rimraf": "^5.0.5",
    "safe-buffer": "^5.2.1",
    "translate-google-fixed-api": "^1.0.1",
    "xml2js": "0.5.0",
    "yazl": "^2.4.2"
  },
  "l10n": "./l10n"
}
